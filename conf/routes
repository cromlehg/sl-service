# Routes
# This file defines all application routes (Higher priority routes first)
# https://www.playframework.com/documentation/latest/ScalaRouting
# ~~~~

# An example controller showing a sample home page
GET         /                                                               controllers.AppController.index

GET         /app/panel                                                      controllers.AppController.panel

GET         /app/login                                                      controllers.AccountsController.login

GET         /app/denied                                                     controllers.AccountsController.denied

+ nocsrf
POST        /app/login                                                      controllers.AccountsController.processLogin

GET         /app/logout                                                     controllers.AccountsController.logout

GET         /app/register/user                                              controllers.AccountsController.registerUser

GET         /app/admin/options                                              controllers.OptionsController.adminOptions

#### Permissions

GET         /app/admin/permissions                                          controllers.PermissionsController.adminPermissions

+ nocsrf
POST        /app/admin/permissions/list/pages/page                          controllers.PermissionsController.adminPermissionsListPage

+ nocsrf
POST        /app/admin/permissions/list/pages/count                         controllers.PermissionsController.adminPermissionsListPagesCount

GET         /app/admin/roles                                                controllers.RolesController.adminRoles

GET         /app/admin/roles/create                                         controllers.RolesController.createRole

+ nocsrf
POST        /app/admin/roles/create                                         controllers.RolesController.processCreateRole

GET         /app/admin/roles/role/:id/edit                                  controllers.RolesController.editRole(id: Long)

+ nocsrf
POST        /app/admin/roles/role/:id/update                                controllers.RolesController.processUpdateRole(id: Long)


GET         /app/admin/roles/role/:id                                       controllers.RolesController.viewRole(id: Long)

+ nocsrf
POST        /app/admin/roles/role/:id/permissions/list/pages/page           controllers.RolesController.adminRolePermissionsListPage(id: Long)

+ nocsrf
POST        /app/admin/roles/role/:id/permissions/list/count                controllers.RolesController.adminRolePermissionsListPagesCount(id: Long)

+ nocsrf
POST        /app/admin/roles/role/:id/permissions/add                       controllers.RolesController.processAddRolePermissions(id: Long)

+ nocsrf
POST        /app/admin/roles/list/pages/page                                controllers.RolesController.adminRolesListPage

+ nocsrf
POST        /app/admin/roles/list/pages/count                               controllers.RolesController.adminRolesListPagesCount



+ nocsrf
POST        /app/admin/options/list/pages/page                              controllers.OptionsController.adminOptionsListPage

+ nocsrf
POST        /app/admin/options/list/pages/count                             controllers.OptionsController.adminOptionsListPagesCount

GET         /app/admin/accounts                                             controllers.AccountsController.adminAccounts

GET         /app/admin/accounts/account/:accountId/profile                  controllers.AccountsController.panelProfile(accountId: Long)

+ nocsrf
POST        /app/admin/accounts/list/pages/page                             controllers.AccountsController.adminAccountsListPage

+ nocsrf
POST        /app/admin/media/upload                                         controllers.MediaController.upload

+ nocsrf
POST        /app/admin/accounts/list/pages/count                            controllers.AccountsController.adminAccountsListPagesCount

GET         /app/admin/accounts/account/:accountId/setstatus/:status        controllers.AccountsController.setAccountStatus(accountId: Long, status: String)

+ nocsrf
POST        /app/options/switchBooleanOption                                controllers.OptionsController.switchBooleanOption

+ nocsrf
POST        /app/register/user                                              controllers.AccountsController.registerProcessUser

GET         /app/register/approve/:login/:code                              controllers.AccountsController.approveRegister(login: String, code: String)

+ nocsrf
POST        /app/register/approve                                           controllers.AccountsController.processApproveRegister

# Password recover
GET         /app/forgotpassword                                             controllers.AccountsController.forgotPassword

+nocsrf
POST        /app/forgotpassword                                             controllers.AccountsController.processForgotPassword

GET         /app/passwordsent                                               controllers.AccountsController.passwordSent

GET         /app/recoverpassword/:login/:code                               controllers.AccountsController.recoverPassword(login: String, code: String)

+nocsrf
POST        /app/recoverpassword                                            controllers.AccountsController.processRecoverPassword

GET         /app/media/*file                                                controllers.MediaController.media(file)

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                                                   controllers.Assets.versioned(path="/public", file: Asset)


